/* @import 'partials/fonts', 'partials/forms', 'partials/shapes'; */

/* Components */
$color: rgb(random($limit: 255), random($limit: 255), random($limit: 255));

// add tab title

body {
    &.light-mode {
        color: black;
        background-color: white;
    }

    &.lighter-mode {
        color: $color - #7b7b7b;
        background-color: $color + #7b7b7b;
    }

    &.darker-mode {
        color: $color + #7b7b7b;
        background-color: $color - #7b7b7b;
    }

    &.dark-mode {
        color: white;
        background-color: black;
    }
}

// add navbar
// add main
// add section
// add footer

/* Fonts */
@mixin typography {
    color: $color;
    font-size: 14px;
    font-weight: 2px;
    text-align: left;
    font-kerning: auto;
    font-family: sans-serif;
    text-align-last: auto;
    text-transform: capitalize;
    text-orientation: sideways;
    font-stretch: semi-expanded;
    text-underline-position: above;
    font-variant-east-asian: simplified;
}

// headings
$headings: 1;

@for $i from 6 through $headings {
    $math: (75/$i);

    h#{$i} {
        @include typography;
        font-style: oblique;
        color: invert($color);
        font-size: 14px + $math;
        font-weight: 2px + $math;
        text-decoration: overline;
        text-decoration-color: invert($color) + #a5a5a5 + ($math*2);

        &.title {
            font-family: 'Franklin Gothic Medium';
        }
    }
}

// paragraph
p {
    @include typography;
    letter-spacing: inherit;
}

// list type
ol {
    @include typography;
    list-style-type: upper-roman;
    font-size: larger;
}

ul {
    @include typography;
    list-style-type: circle;
    font-size: x-large;
}

// strong/bold
strong {
    @include typography;
    font-weight: bolder;
}

// emphasis type
em {
    @include typography;
    font-style: italic;
    font-family: "Franklin Gothic Medium";
    text-decoration: underline;
}

// code 
code {
    @include typography;
    font-family: 'Courier New', Courier, monospace;
    color: $color + (white - #bb66bb);
    background-color: $color - #a5a5a5;
    display: inline-block;
    padding: 1em;
}

// abbriviation
abbr {
    position: relative;
}

abbr:hover {
    text-decoration: none;
    color: $color - #7e7e7e;
}

// links
a {
    @include typography;
    text-decoration: none;
    color: $color - #7e7e7e;
}

a:hover {
    text-decoration: double;
    color: $color + (white - #bb66bb);
}

/* Forms */
button {
    @include typography;
    border-width: 3px;
    border-color: cyan;
    color: invert($color);
    background-color: $color + blue;
    padding: 1em;

    &.delete {
        border-color: lightcoral;
        background-color: $color + red;
    }

    &.warning {
        border-color: lightgoldenrodyellow;
        background-color: $color + rgb(150, 150, 0);
    }

    &.go {
        border-color: lightgreen;
        background-color: $color + green;
    }
}

form {
    padding: 1rem;
    align-items: center;
    border: 4px solid black;
    color: invert($color) - #cccccc;
    background-color: $color + #cccccc;
}

@mixin type {
    height: 32px;
    width: 50%;
    position: relative;
    display: flex;
    flex-direction: column;
    border: 2px solid black;
    box-shadow: 1.5px 1.5px black;
}

input {
    &[type=text] {
        @include type;
    }

    &[type=email] {
        @include type;
    }

    &[type=password] {
        @include type;
    }

    &[type=date] {
        @include type;
    }

    &[type=time] {
        @include type;
    }

    &[type=month] {
        @include type;
    }

    &[type=week] {
        @include type;
    }

    &[type=datetime-local] {
        @include type;
    }

    &[type=color] {
        @include type;
        width: 37px;
        height: 35px;
        border: none;
        border-radius: 50%;
        background: none;
        box-shadow: none;
    }

    &[type=color]::-webkit-color-swatch-wrapper {
        padding: 0;
    }

    &[type=color]::-webkit-color-swatch {
        border: 2px solid #ddd;
        border-radius: 50%;
    }

    &[type=file] {
        @include type;
        border: none;
        box-shadow: none;
    }

    &[type=range] {
        @include type;
        border: none;
        box-shadow: none;
    }

    &[type=search] {
        @include type;
        background-image: url('searchicon.png');
        background-position: 10px 10px;
        background-repeat: no-repeat;
        padding-left: 40px;
        transition: width 0.4s ease-in-out;
    }

    &[type=search]:focus {
        transition: width 0.4s ease-in-out;
    }

    &[type=number] {
        @include type;
    }

    &[type=url] {
        @include type;
    }
}

textarea {
    @include type;
    width: 50%;
    height: 25%;
}

$version: (
    1: #2196F3,
    2: #00C356,
    3: #cd042c,
);

label {

    @each $version,
    $value in $version {
        &.switch-v#{$version} {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;

            input {
                visibility: hidden;
            }

            div,
            span {
                position: absolute;
                cursor: pointer;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                color: invert($color);
                background-color: #ccc - $value;
                border-radius: 34px;
                transition: .4s;
            }

            div:before,
            span:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white - $value;
                border-radius: 50%;
                transition: .4s;
            }

            input:checked+div,
            input:checked+span {
                background-color: $value;
            }

            input:focus+div,
            input:focus+span {
                box-shadow: 0 0 1px $value;
            }

            input:checked+div:before,
            input:checked+span:before {
                transform: translateX(26px);
            }
        }

        &.checkbox-v#{$version} {
            position: relative;
            display: inline-block;
            width: 34px;
            height: 34px;
            border: 4px solid black;

            input {
                visibility: hidden;
            }

            div,
            span {
                position: absolute;
                cursor: pointer;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: #ccc - $value;
                transition: .4s;
            }

            input:checked+div,
            input:checked+span {
                background-color: $value;
            }

            input:focus+div,
            input:focus+span {
                box-shadow: 0 0 1px $value;
            }

            input:checked,
            input:checked {
                transform: translateX(26px);
            }
        }

        &.radio-v#{$version} {

        }
    }
}

/* Shapes */

/* Misc. */